name: Build and push

on:
    push:
        branches:
            - main
        tags:
            - "v[0-9]+.[0-9]+.[0-9]+"

env:
    REGISTRY_IMAGE: netfloex/quickadd

jobs:
    tests:
        runs-on: ubuntu-latest
        steps:
        steps:
            - name: Setup yarn and install dependencies
              uses: netfloex/actions/yarn@master
              with:
                  node-version: 18.18.0

            - name: Check Types
              run: yarn typescript

            - name: Test ESLint
              run: yarn lint

    build:
        needs:
            - tests
        runs-on: ubuntu-latest
        strategy:
            fail-fast: false
            matrix:
                platform:
                    - linux/amd64
                    - linux/arm64
        steps:
            - name: Prepare
              run: |
                  platform=${{ matrix.platform }}
                  echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV
            - name: Checkout
              uses: actions/checkout@v4

            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: |
                      type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
                      type=semver,pattern=v{{major}}.{{minor}}
                      type=semver,pattern=v{{major}}
                      type=raw,value=latest

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Build and push by digest
              id: build
              uses: docker/build-push-action@v5
              with:
                  context: .
                  platforms: ${{ matrix.platform }}
                  labels: ${{ steps.meta.outputs.labels }}
                  outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
            - name: Export digest
              run: |
                  mkdir -p /tmp/digests
                  digest="${{ steps.build.outputs.digest }}"
                  touch "/tmp/digests/${digest#sha256:}"
            - name: Upload digest
              uses: actions/upload-artifact@v4
              with:
                  name: digests-${{ env.PLATFORM_PAIR }}
                  path: /tmp/digests/*
                  if-no-files-found: error
                  retention-days: 1

    merge:
        runs-on: ubuntu-latest
        needs:
            - build
        steps:
            - name: Download digests
              uses: actions/download-artifact@v4
              with:
                  path: /tmp/digests
                  pattern: digests-*
                  merge-multiple: true
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Docker meta
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY_IMAGE }}
                  tags: |
                      type=semver,pattern=v{{major}}.{{minor}}.{{patch}}
                      type=semver,pattern=v{{major}}.{{minor}}
                      type=semver,pattern=v{{major}}
                      type=raw,value=latest
            - name: Login to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: netfloex
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Create manifest list and push
              working-directory: /tmp/digests
              run: |
                  docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
                    $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
            - name: Inspect image
              run: |
                  docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:${{ steps.meta.outputs.version }}
